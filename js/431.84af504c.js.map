{"version":3,"file":"js/431.84af504c.js","mappings":"2LAEIA,EAAAA,EAAAA,IAAqB,UAAjB,gBAAY,G,GAENC,MAAM,wBAAwBC,IAAI,U,GAGpCA,IAAI,SAASC,MAAA,kB,0CANvBC,EAAAA,EAAAA,IAOM,YANJC,GACAL,EAAAA,EAAAA,IAGM,aAFJA,EAAAA,EAAAA,IAAuE,SAAvEM,EAAmD,cAAW,MAC9DN,EAAAA,EAAAA,IAAsD,UAA7CO,QAAKC,EAAA,KAAAA,EAAA,OAAAC,IAAEC,EAAAC,eAAAD,EAAAC,iBAAAF,KAAe,qBAEjCT,EAAAA,EAAAA,IAAqD,SAArDY,EAAqD,W,CAKzD,OACEC,OAAAA,GAEEC,KAAKC,gBACP,EACAC,QAAS,CACPD,cAAAA,GACE,MAAME,EAASH,KAAKI,MAAMD,OACpBE,EAASL,KAAKI,MAAMC,OACpBC,EAAMD,EAAOE,WAAW,MAGxBC,EAAaL,EAAOM,wBAC1BJ,EAAOK,MAAQF,EAAWE,MAC1BL,EAAOM,OAASH,EAAWG,OAG3BL,EAAIM,UAAYC,iBAAiBV,GAAQW,gBACzCR,EAAIS,SAAS,EAAG,EAAGV,EAAOK,MAAOL,EAAOM,QACxCL,EAAIU,KAAOH,iBAAiBV,GAAQc,SAAW,IAAMJ,iBAAiBV,GAAQe,WAC9EZ,EAAIM,UAAYC,iBAAiBV,GAAQgB,MACzCb,EAAIc,UAAY,SAChBd,EAAIe,aAAe,SACnBf,EAAIgB,SAASnB,EAAOoB,UAAWlB,EAAOK,MAAQ,EAAGL,EAAOM,OAAS,GAGjEL,EAAIM,UAAY,2BAChBN,EAAIkB,yBAA2B,iBAC/BlB,EAAImB,YACJnB,EAAIoB,IAAIrB,EAAOK,MAAQ,EAAGL,EAAOM,OAAS,EAAGN,EAAOK,MAAQ,EAAG,EAAG,EAAIiB,KAAKC,IAC3EtB,EAAIuB,OAGJvB,EAAIwB,UAAU,EAAG,EAAGzB,EAAOK,MAAOL,EAAOM,QACzCL,EAAIkB,yBAA2B,aACjC,EACA3B,aAAAA,GACE,MAAMM,EAASH,KAAKI,MAAMD,OACpBE,EAASL,KAAKI,MAAMC,OACpBC,EAAMD,EAAOE,WAAW,MAGxBC,EAAaL,EAAOM,wBAC1BJ,EAAOK,MAAQF,EAAWE,MAC1BL,EAAOM,OAASH,EAAWG,OAG3BL,EAAIM,UAAYC,iBAAiBV,GAAQW,gBACzCR,EAAIS,SAAS,EAAG,EAAGV,EAAOK,MAAOL,EAAOM,QACxCL,EAAIU,KAAOH,iBAAiBV,GAAQc,SAAW,IAAMJ,iBAAiBV,GAAQe,WAC9EZ,EAAIM,UAAYC,iBAAiBV,GAAQgB,MACzCb,EAAIc,UAAY,SAChBd,EAAIe,aAAe,SACnBf,EAAIgB,SAASnB,EAAOoB,UAAWlB,EAAOK,MAAQ,EAAGL,EAAOM,OAAS,GAGjEL,EAAIM,UAAY,2BAChBN,EAAIkB,yBAA2B,iBAC/BlB,EAAImB,YACJnB,EAAIoB,IAAIrB,EAAOK,MAAQ,EAAGL,EAAOM,OAAS,EAAGN,EAAOK,MAAQ,EAAG,EAAG,EAAIiB,KAAKC,IAC3EtB,EAAIuB,OAGJ,MAAME,EAAU1B,EAAO2B,UAAU,aAC3BC,EAAOC,SAASC,cAAc,KACpCF,EAAKG,SAAW,kBAChBH,EAAKI,KAAON,EACZE,EAAKK,QAGLhC,EAAIwB,UAAU,EAAG,EAAGzB,EAAOK,MAAOL,EAAOM,QACzCL,EAAIkB,yBAA2B,aACjC,I,UC7EJ,MAAMe,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://vue-project1/./src/qrcss/CssButtons08.vue","webpack://vue-project1/./src/qrcss/CssButtons08.vue?583a"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Wave Buttons</h1>\r\n    <div>\r\n      <button class=\"qr-button wave-button\" ref=\"button\">Wave Effect</button>\r\n      <button @click=\"downloadImage\">Download Image</button>\r\n    </div>\r\n    <canvas ref=\"canvas\" style=\"display: none;\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  mounted () {\r\n    // Start animation on mount\r\n    this.startAnimation()\r\n  },\r\n  methods: {\r\n    startAnimation () {\r\n      const button = this.$refs.button\r\n      const canvas = this.$refs.canvas\r\n      const ctx = canvas.getContext('2d')\r\n\r\n      // Set canvas dimensions equal to button dimensions\r\n      const buttonRect = button.getBoundingClientRect()\r\n      canvas.width = buttonRect.width\r\n      canvas.height = buttonRect.height\r\n\r\n      // Draw button content to canvas\r\n      ctx.fillStyle = getComputedStyle(button).backgroundColor\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n      ctx.font = getComputedStyle(button).fontSize + ' ' + getComputedStyle(button).fontFamily\r\n      ctx.fillStyle = getComputedStyle(button).color\r\n      ctx.textAlign = 'center'\r\n      ctx.textBaseline = 'middle'\r\n      ctx.fillText(button.innerText, canvas.width / 2, canvas.height / 2)\r\n\r\n      // Apply initial wave effect\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.3)'\r\n      ctx.globalCompositeOperation = 'destination-in'\r\n      ctx.beginPath()\r\n      ctx.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2, 0, 2 * Math.PI)\r\n      ctx.fill()\r\n\r\n      // Clean up after initial animation\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n      ctx.globalCompositeOperation = 'source-over'\r\n    },\r\n    downloadImage () {\r\n      const button = this.$refs.button\r\n      const canvas = this.$refs.canvas\r\n      const ctx = canvas.getContext('2d')\r\n\r\n      // Set canvas dimensions equal to button dimensions\r\n      const buttonRect = button.getBoundingClientRect()\r\n      canvas.width = buttonRect.width\r\n      canvas.height = buttonRect.height\r\n\r\n      // Draw button content to canvas\r\n      ctx.fillStyle = getComputedStyle(button).backgroundColor\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n      ctx.font = getComputedStyle(button).fontSize + ' ' + getComputedStyle(button).fontFamily\r\n      ctx.fillStyle = getComputedStyle(button).color\r\n      ctx.textAlign = 'center'\r\n      ctx.textBaseline = 'middle'\r\n      ctx.fillText(button.innerText, canvas.width / 2, canvas.height / 2)\r\n\r\n      // Apply wave effect\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.3)'\r\n      ctx.globalCompositeOperation = 'destination-in'\r\n      ctx.beginPath()\r\n      ctx.arc(canvas.width / 2, canvas.height / 2, canvas.width / 2, 0, 2 * Math.PI)\r\n      ctx.fill()\r\n\r\n      // Convert canvas to image and download\r\n      const dataURL = canvas.toDataURL('image/png')\r\n      const link = document.createElement('a')\r\n      link.download = 'wave_button.png'\r\n      link.href = dataURL\r\n      link.click()\r\n\r\n      // Clean up after download\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n      ctx.globalCompositeOperation = 'source-over'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* Common button styles */\r\n.qr-button {\r\n  padding: 15px 30px;\r\n  font-size: 16px;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  display: inline-block;\r\n  margin: 10px;\r\n  background: linear-gradient(45deg, #0077ff, #00ccff);\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n/* Wave Button */\r\n.wave-button {\r\n  background: linear-gradient(45deg, #0077ff, #00ccff);\r\n}\r\n\r\n.wave-button::before {\r\n  content: '';\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 300%;\r\n  height: 300%;\r\n  background: radial-gradient(circle, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0) 70%);\r\n  transition: transform 0.5s ease, opacity 0.5s ease;\r\n  transform: translate(-50%, -50%) scale(0);\r\n  opacity: 0;\r\n}\r\n\r\n.wave-button:hover::before {\r\n  transform: translate(-50%, -50%) scale(1);\r\n  opacity: 1;\r\n}\r\n\r\n/* Extra Wave Effect */\r\n.wave-button::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: -45%;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(45deg, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0) 70%);\r\n  transition: transform 0.5s ease;\r\n  transform: translateX(-100%) skewX(-15deg);\r\n}\r\n\r\n.wave-button:hover::after {\r\n  transform: translateX(200%) skewX(-15deg);\r\n}\r\n</style>\r\n","import { render } from \"./CssButtons08.vue?vue&type=template&id=a8c1a36c\"\nimport script from \"./CssButtons08.vue?vue&type=script&lang=js\"\nexport * from \"./CssButtons08.vue?vue&type=script&lang=js\"\n\nimport \"./CssButtons08.vue?vue&type=style&index=0&id=a8c1a36c&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","class","ref","style","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","downloadImage","_hoisted_3","mounted","this","startAnimation","methods","button","$refs","canvas","ctx","getContext","buttonRect","getBoundingClientRect","width","height","fillStyle","getComputedStyle","backgroundColor","fillRect","font","fontSize","fontFamily","color","textAlign","textBaseline","fillText","innerText","globalCompositeOperation","beginPath","arc","Math","PI","fill","clearRect","dataURL","toDataURL","link","document","createElement","download","href","click","__exports__","render"],"sourceRoot":""}